version: '3.8'

services:
  db:
    container_name: nodejs2022Q2-db
    image: postgres:14.0-alpine
    build:
      context: .
      dockerfile: ./database/Dockerfile
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./pglogs:/var/log/postgresql/postgresql.log
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}

  nest:
    container_name: nodejs2022Q2-nest
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - CRYPT_SALT=${CRYPT_SALT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_SECRET_REFRESH_KEY=${JWT_SECRET_REFRESH_KEY}
      - TOKEN_EXPIRE_TIME=${TOKEN_EXPIRE_TIME}
      - TOKEN_REFRESH_EXPIRE_TIME=${TOKEN_REFRESH_EXPIRE_TIME}
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_HOST=db
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules

networks:
  db:
    name: 'nodejs2022Q2-network'
    driver: bridge
